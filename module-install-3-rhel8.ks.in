#test name: module-install
#
# generic module install test:
# - enable one module with a stream
# - install the same module with same stream

%ksappend repos/default.ks
%ksappend common/common_no_payload.ks

module --name=nodejs --stream=10

%packages
@nodejs:10/development
kernel
vim
%end

%post
# modules have some packages defined as their API in their profiles,
# we can check for those to be (or not to be installed) to see if the
# module has (or has not) been installed

# the vim standalone package
rpm -q vim-minimal
if [[ $? != 0 ]]; then
    echo '*** vim-minimal package requested but not installed' >> /root/RESULT
fi

# it is also nice to have kernel
rpm -q kernel
if [[ $? != 0 ]]; then
    echo '*** kernel package not installed' >> /root/RESULT
fi

# the nodejs module should be both enabled and inst development profile installed

rpm -q nodejs
if [[ $? != 0 ]]; then
    echo '*** nodejs package for nodejs module profile development not installed' >> /root/RESULT
fi

rpm -q nodejs-devel
if [[ $? != 0 ]]; then
    echo '*** nodejs-devel package for nodejs module profile development not installed' >> /root/RESULT
fi
rpm -q npm
if [[ $? != 0 ]]; then
    echo '*** npm package for nodejs module profile development not installed' >> /root/RESULT
fi

# next we will check if the module is seen as enabled/installed from the
# metadata/DNF point of view
dnf module list --enabled nodejs | grep nodejs || echo "*** nodejs module not marked as enabled" >> /root/RESULT
dnf module list --installed nodejs | grep nodejs || echo "*** nodejs module not marked as installed" >> /root/RESULT

# check the stream and profile as well
dnf module list --installed nodejs | grep "development \[i\]" || echo "*** nodejs module development profile not marked as installed" >> /root/RESULT

%ksappend validation/success_if_result_empty.ks

%end
